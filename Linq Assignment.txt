
using Microsoft.OData.Edm;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace dbmsassesment5
{
    class Employee
    {
        public int EmployeeID;
        public string FirstName;
        public string LastName;
        public string Title;
        public Date DOB;
        public Date DOJ;
        public string City;
    
        static void Main()
        {


            //creating list for employee

            List<Employee> EmployeeList = new List<Employee>()
            {
               new Employee() { EmployeeID = 1001, FirstName = "Malcolm",  LastName = "Daruwalla   ",Title = "Manager      ",DOB=Date.Parse("16/11/1984"),   DOJ=Date.Parse("02/ 06/2011"), City="Mumbai" },
               new Employee() { EmployeeID = 1002, FirstName = "Asdin",    LastName = "Dhalla      ",Title = "AsstManager  ",DOB=Date.Parse("20/08/1984"),   DOJ=Date.Parse("07/07/2012"),  City="Mumbai"},
               new Employee() { EmployeeID = 1003, FirstName = "Madhavi",  LastName = "Oza         ",Title = "Consultant   ",DOB=Date.Parse("14/11/1987"),   DOJ=Date.Parse("12/04/2015"),  City="Pune"},
               new Employee() { EmployeeID = 1004, FirstName = "Saba",     LastName = "Shaikh      ",Title = "SE           ",DOB=Date.Parse("03/06/1990"),   DOJ=Date.Parse("02/02/2016"),  City="Pune"},
               new Employee() { EmployeeID = 1005, FirstName = "Nazia",    LastName = "Shaikh      ",Title = "SE           ",DOB=Date.Parse("08/03/1991"),   DOJ=Date.Parse("02/02/2016"),  City="Mumbai"},
               new Employee() { EmployeeID = 1006, FirstName = "Amit",     LastName = "Pathak      ",Title = "Consultant   ",DOB=Date.Parse("07/11/1989"),   DOJ=Date.Parse("08/08/2014"),  City="Chennai"},
               new Employee() { EmployeeID = 1007, FirstName = "Vijay",    LastName = "Natrajan    ",Title = "Consultant   ",DOB=Date.Parse("02/12/1989"),   DOJ=Date.Parse("01/06/2015"),  City="Mumbai"},
               new Employee() { EmployeeID = 1008, FirstName = "Rahul",    LastName = "Dubey       ",Title = "Associate    ",DOB=Date.Parse("11/11/1993"),   DOJ=Date.Parse("06/11/2014"),  City="Chennai"},
               new Employee() { EmployeeID = 1009, FirstName = "Suresh",   LastName = "Mistry      ",Title = "Associate    ",DOB=Date.Parse("12/08/1992"),   DOJ=Date.Parse("03/12/2014"),  City="Chennai"},
               new Employee() { EmployeeID = 1010, FirstName = "Sumit",    LastName = "Shah        ",Title = "Manager      ",DOB=Date.Parse("12/04/1991"),   DOJ=Date.Parse("02/01/2016"),  City="Pune"},
            };
            Console.WriteLine("1.Display detail of all the employee");

            var res1 = from e in EmployeeList
                      select e;
            foreach (var item in res1)
            {
                Console.WriteLine(item.EmployeeID + "\t" + item.FirstName + "\t" + item.LastName + "\t" + item.Title + "\t" + item.DOB + "\t" + item.DOJ + "\t" + item.City);


            }


            Console.WriteLine("2.Display details of all the employee whose location is not Mumbai");

            var res2 = from e in EmployeeList
                       where e.City != "Mumbai"
                       select e;
            foreach (var item in res2)
            {
                Console.WriteLine(item.EmployeeID + "\t" + item.FirstName + "\t" + item.LastName + "\t" + item.Title + "\t" + item.DOB + "\t" + item.DOJ + "\t" + item.City);


            }

            Console.WriteLine("3.Display details of all the employee whose title is AsstManager");
            var res3 = from e in EmployeeList
                       where e.Title.Contains("AsstManager")
                       select e;
            foreach (var item in res3)
            {
                Console.WriteLine(item.EmployeeID + "\t" + item.FirstName + "\t" + item.LastName + "\t" + item.Title + "\t" + item.DOB + "\t" + item.DOJ + "\t" + item.City);

                Console.WriteLine("-----------------------------------------------------------------------------------------------------------------------");
            }

            Console.WriteLine(" 4.Display details of all the employee whose Last Name start with S");
            var res4 = from e in EmployeeList
                       where e.LastName.StartsWith("S")
                       select e;
            foreach (var item in res4)
            {
                Console.WriteLine(item.EmployeeID + "\t" + item.FirstName + "\t" + item.LastName + "\t" + item.Title + "\t" + item.DOB + "\t" + item.DOJ + "\t" + item.City);

                Console.WriteLine("-----------------------------------------------------------------------------------------------------------------------");
            }

            Console.WriteLine("5.Display a list of all the employee who have joined before 1 / 1 / 2015");
            var res5 = from e in EmployeeList
                     where e.DOJ < Date.Parse("1 / 1 / 2015")
                     select e;
            foreach (var item in res5)
            {
                Console.WriteLine(item.EmployeeID + "\t " + item.FirstName + "\t " + item.LastName + "\t" + item.Title + "\t" + item.DOB + " \t" + item.DOJ + "\t " + item.City);
            }
            Console.WriteLine();

            Console.WriteLine("6.Display a list of all the employee whose date of birth is after 1/1/1990");
            var res6 = from e in EmployeeList
                     where e.DOB > Date.Parse("1 / 1 / 1990")
                     select e;
            foreach (var item in res6)
            {
                Console.WriteLine(item.EmployeeID + "\t " + item.FirstName + "\t " + item.LastName + "\t" + item.Title + "\t" + item.DOB + " \t" + item.DOJ + "\t " + item.City);
            }
            Console.WriteLine();

            Console.WriteLine("7.Display a list of all the employee whose designation is Consultant and Associate");
            var res7 = from e in EmployeeList
                       where e.Title.Contains("Consultant" )|| e.Title.Contains("Associate")
                       select e;
            foreach (var item in res7)
            {
                Console.WriteLine(item.EmployeeID + "\t" + item.FirstName + "\t" + item.LastName + "\t" + item.Title + "\t" + item.DOB + "\t" + item.DOJ + "\t" + item.City);

                

            }

            Console.WriteLine("8.Display total number of employees");


            var res8 = (from e in EmployeeList
                        select e.EmployeeID).Count();
            Console.WriteLine("Total number of employees: {0}", res8);

            Console.WriteLine("9. Display total number of employees belonging to “Chennai”");
            var res9 = (from e in EmployeeList
                        where e.City == "Chennai"
                        select e.EmployeeID).Count();
            Console.WriteLine("Total number of employees from chennai: {0}", res9);

            Console.WriteLine("10.Display highest employee id from the list");

            int res10 = (from e in EmployeeList
                        select e.EmployeeID).Max();
            Console.WriteLine("Highest number of employee ID 's  {0}:", res10);

            Console.WriteLine("11.Display a list of all the employee who have joined after 1 / 1 / 2015\n");
            var res11 = from e in EmployeeList
                        where e.DOJ > Date.Parse("1 / 1 / 2015")
                        select e;
            foreach (var item in res11)
            {
                Console.WriteLine(item.EmployeeID + "\t " + item.FirstName + "\t " + item.LastName + "\t" + item.Title + "\t" + item.DOB + " \t" + item.DOJ + "\t " + item.City);
            }

            Console.WriteLine("12.Display total number of employee whose designation is not “Associate”");

            int res12 = (from e in EmployeeList
                        where e.Title != "Associate"
                        select e.EmployeeID).Count();


            Console.WriteLine("Number of employees other than Associates: {0}", res12);

            Console.WriteLine("13.Display total number of employee based on City");

            int res13 = (from e in EmployeeList
                         where e.City == "Pune"
                         select e.EmployeeID).Count();

            int rs13 = (from e in EmployeeList
                         where e.City == "Chennai"
                         select e.EmployeeID).Count();

            int re13 = (from e in EmployeeList
                         where e.City == "Mumbai"
                         select e.EmployeeID).Count();


            Console.WriteLine("Number of employees belongs to pune: {0} and  Chennai: {1} and Mumbai: {2}", res13, rs13, re13);

            Console.WriteLine("14.Display total number of employee based on city and title");
            var res14 = (from e in EmployeeList
                       group e by (e.City, e.Title) into city
                       orderby city.Key
                       select city);
            foreach (var item in res14)
            {
                Console.WriteLine(item.Key + "\t" + item.Count());
            }
            Console.WriteLine();

            Console.WriteLine("15.Display total number of employee who is youngest in the list\n");
            var res15 = from e in EmployeeList
                      where e.DOB == (from e1 in EmployeeList select e.DOB).Max()
                      select e;
            Console.WriteLine("The Youngest Employee:");
            foreach (var item in res15)
            {
                Console.WriteLine("Employee ID:{0}", item.EmployeeID);
            }
            Console.ReadLine();
















            




        }
    }
}









