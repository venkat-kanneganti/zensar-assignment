ASSESMENT 1 && 2

-----------------------------------------------------------------

--creating the databse

create database Excercise

use Excercise

--creating the table employee
create table  employee (
  empno INTEGER PRIMARY KEY,
  ename varchar(20) NOT NULL,
  job varchar(35),
 
  manager INTEGER,
  hiredate date,
  sal INTEGER,
  comm INTEGER,
  deptno INTEGER foreign key references depart(depno));

  --creating the data for department

create table depart (
depno INTEGER primary key,
dname varchar(20),
loc varchar(20));

drop table employee

drop table depart

--querying the table

select * from employee

select * from depart

--inserting the data into the table

insert into employee
values
(7369, 'SMITH', 'CLERK', 7902, '17-DEC-80', 800,null, 20),

(7499, 'ALLEN', 'SALESMAN', 7698, '20-FEB-81', 1600,300, 30),
(7521, 'WARD', 'SALESMAN', 7698, '22-FEB-81', 1250,500, 30),
(7566, 'JONES', 'MANAGER', 7839, '02-APR-81', 2975,null, 20),
(7654, 'MARTIN', 'SALESMAN', 7698, '28-SEP-81', 1250,1400, 30),
(7698, 'BLAKE', 'MANAGER', 7839, '01-MAY-81', 2850,null, 30),
(7782, 'CLARK', 'MANAGER', 7839, '09-JUN-81', 2450,null, 10),
(7788, 'SCOTT', 'ANALYST', 7566, '19-APR-87', 3000,null, 20),
(7839, 'KING', 'PRESIDENT', null, '17-NOV-81', 5000,null, 10),
(7844, 'TURNER', 'SALESMAN', 7698, '08-SEP-81', 1500,0, 30),
(7876, 'ADAMS', 'CLERK', 7788, '23-MAY-87',1100,null, 20),
(7900, 'JAMES', 'CLERK', 7698, '03-DEC-81', 950,null, 30),
(7902, 'FORD', 'ANALYST', 7566, '03-DEC-81', 3000,null, 20),
(7934, 'MILLER', 'CLERK', 7782, '23-JAN-82', 1300,null, 10)

insert into depart
values
(10, 'Accounting', 'New York'),
(20, 'Research', 'Dalla'),
(30, 'Sales', 'Chicago'),
(40, 'Operations', 'Boston')

--1. List all employees whose name begins with 'A'.
select * from employee where ename like 'A%' 

--2. Select all those employees who don't have a manager. 
select * from employee where manager is null  

--3. List employee name, number and salary for those employees who earn in the range 1200 to 1400. 
select ename, empno, sal from employee where sal between 1200 and 1400

--4.Give all the employees in the RESEARCH department a 10% pay rise. Verify that this has been done by listing all their details before and after the rise.  
--select sal, deptno from employee
--where deptno = 20
--update employee set sal = sal + (sal*10/100)

select deptno, ename, sal, (sal + (sal*10/100))'New Salary'  from employee
where deptno = 20

--select sal, deptno from employee
--where deptno = 20



--5 Find the number of CLERKS employed. Give it a descriptive heading. 
select count(job) 'Total no of clerks' from employee where job = 'CLERK'

--6 Find the average salary for each job type and the number of people employed in each job. 
select job, count(*) 'No of people', AVG(sal) from employee 
group by(job)

--7 List the employees with the lowest and highest salary. 
select  ename, sal from employee 
where sal = (select(min(sal)) from employee)
select  ename, sal from employee 
where sal =(select( max(sal))  from employee)

--8 List full details of departments that don't have any employees. 
select * from depart where depno not in(select deptno from employee) 

--9 Get the names and salaries of all the analysts earning more than 1200 who are based in department 20. Sort the answer by ascending order of name. 
select ename, sal from employee
where job = 'ANALYST' and sal > 1200 and deptno= 20
order by ename

--10  For each department, list its name and number together with the total salary paid to employees in that department. 
select dname, count(*) depno ,sum(sal) from depart,employee
where depart.depno = employee.deptno
group by dname
--11 Find out salary of both MILLER and SMITH.
select sal from employee where ename like 'MILLER' or ename like 'SMITH'






--12 Find out the names of the employees whose name begin with ‘A’ or ‘M’. 
select * from employee where ename like 'A%'  or ename like 'M%'

--13 Compute yearly salary of SMITH.
select  sal*12 'Annual sal' from employee where ename = 'SMITH'

--14  List the name and salary for all employees whose salary is not in the range of 1500 and 2850. 
select ename, sal from employee where sal  not between 1500 and 2850

--asignment 2
--1.

select * from employee where job = 'MANAGER'

--2. Find out salary of both MILLER and SMITH.
select sal from employee where ename like 'MILLER' or ename like 'SMITH'

--3 Find out the names and salaries of all employees earning more than 1000 per month
select ename, sal from employee where sal > 1000

--4. Display the names and salaries of all employees except JAMES. 

select ename , sal from employee where ename != 'JAMES'

--5. Find out the details of employees whose names begin with ‘S’.
select * from employee where ename like 'S%' 

--6.Find out the names of all employees that have ‘A’ anywhere in their name. 
select * from employee where ename like '%A%' 

--7.Find out the names of all employees that have ‘L’ as their third character in their name 
select * from employee where ename like '%__L%' 

--8.
select * from employee where ename like '%A%' or ename like '%M%'

--9. Compute yearly salary of SMITH.
select  sal,(sal*12) 'Annual sal' from employee where ename = 'SMITH'

--10. Compute monthly salary of JONES.
select sal,(sal/30) 'Monthly Salary' from employee where ename ='JONES'

--11. Calculate the total monthly salary of all employees.
select sum(sal) 'total monthly salary' from employee

--12. Print the average annual salary. 
select AVG(sal*12) 'Annual Salary' from  employee

--13. Select the name, job, salary, department number of all employees except SALESMAN from department number 30.
select ename, job, sal, deptno from employee where job != 'SALESMAN' and  deptno =30
--14. List unique departments of the EMP table. 

select distinct deptno from employee
--15. List the name and salary of employees who earn more than 1500 and are in department 10 or 30. Label the columns Employee and Monthly Salary respectively.

select ename, sal from employee where sal > 1500 and ( deptno = 10 or deptno =30)

----------------------------------------------------------------------------------------------------------------------------------------


Special Assignment---


--creating the database

create database ITFIRM

use ITFIRM

create table Clients
(Client_ID int primary key,
Cname varchar(40) not null,
addres varchar(30),
Email varchar(30) unique,
Phone bigint,
Business varchar(20) not null)

select * from Clients

drop table Clients

insert into Clients
values

(1001, 'ACME Utilities', 'Noida', 'contact@acmeutil.com',9567880032,'Manufacturing'),
(1002,	'Trackon Consultants','Mumbai','consult@trackon.com',8734210090,'Consultant'),
(1003,	'MoneySaver Distributors','Kolkata','save@moneysaver.com',7799886655,'Reseller'),
(1004,	'Lawful Corp','Chennai','justice@lawful.com',9210342219,'Professional')

create table Employees
(Empno int primary key,
Ename varchar(20) not null,
Job varchar(15),
Salary bigint check (Salary > 0),
Deptno int foreign key references Departments(DeptNo)

insert into Employees
values
(7001,'Sandeep', 'Analyst',	25000,	10),
(7002,'Rajesh',	'Designer',30000,10),
(7003,	'Madhav','Developer',40000,20),
(7004,	'Manoj'	,'Developer',40000,20),
(7005,	'Abhay',	'Designer',	35000,	10),
(7006,	'Uma',	'Tester',	30000,	30),
(7007,	'Gita',	'Tech. Writer',	30000,	40),
(7008,	'Priya',	'Tester',	35000,	30),
(7009,	'Nutan',	'Developer',	45000,	20),
(7010,	'Smita',	'Analyst',	20000,	10),
(7011,	'Anand',	'Project Mgr',	65000,	10)

select * from Employees

--creation of Departments 

create table Departments
(DeptNo int primary key,
Dname varchar(15) not null,
Loc varchar(20))

insert into Departments
values
(10, 'Design', 'Pune'),
(20, 'Development', 'Pune'),
(30, 'Design', 'Pune'),
(40, 'Development', 'Pune')

select * from Departments

--creation of Projects table

create table Projects
(Project_ID int primary key,
Descr varchar(30) not null,
Start__Date date,
Planned_End_Date date,
Actual_End_Date date, Check(Actual_End_Date>Planned_End_Date),
Budget bigint, Check(Budget>0),
Client_Id int foreign key references Clients(Client_ID))


select *from Projects

insert into Projects
values
(401,'Inventory','01-Apr-11','01-Oct-11','31-Oct-11',150000,1001),
(402,'Accounting','01-Aug-11','01-Jan-12',null, 500000,1002),
(403,'Payroll','01-Oct-11','31-Dec-11',null, 75000,1003),
(404,'Contact Mgmt','01-Nov-11','31-Dec-11',null,50000,1004)


---creation table of EmpProjectTasks

-- error coming
drop table Projects

create table EmpProjectTasks
(Project_Id int foreign key references Projects(Project_ID),
EmpNo int foreign key references Employees(Empno),
Start__Date date,
End_Date date,
Task varchar(25) not null,
Pro_Status varchar(15) not null,
primary key(Project_Id,EmpNo))



insert into EmpProjectTasks
values
(401,7001,'01-Apr-11','20-Apr-11','System Analysis','Completed'),
(401,7002,'21-Apr-11','30-May-11','System Design','Completed'),
(401,7003,'01-Jun-11','15-Jul-11','Coding','Completed'),
(401,7004,'18-Jul-11','01-Sep-11','Coding', 'Completed'),
(401,7006,'03-Sep-11','15-Sep-11','Testing','Completed'),
(401,7009,'18-Sep-11','05-Oct-11','Code Change','Completed'),
(401,7008,'06-Oct-11','16-Oct-11','Testing','Completed'),
(401,7007,'06-Oct-11','22-Oct-11','Documentation','Completed'),
(401,7011,'22-Oct-11','31-Oct-11','Sign off','Completed'),
(402,7010,'01-Aug-11','20-Aug-11','System Analysis','Completed'),
(402,7002,'22-Aug-11','30-Sep-11','System Design','Completed'),
(402,7004,'01-Oct-11',null, 'Coding','In Progress')



select * from EmpProjectTasks
